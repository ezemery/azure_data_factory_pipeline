{
	"name": "DataSummary",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "nycpayroll2020_dataset",
						"type": "DatasetReference"
					},
					"name": "source2020"
				},
				{
					"dataset": {
						"referenceName": "nycpayroll2021_dataset",
						"type": "DatasetReference"
					},
					"name": "source2021"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "nycpayrollsummary_dataset",
						"type": "DatasetReference"
					},
					"name": "sinktoSqlSummaryTable"
				},
				{
					"dataset": {
						"referenceName": "stagingBlob",
						"type": "DatasetReference"
					},
					"name": "sinktoBlobStorage",
					"rejectedDataLinkedService": {
						"referenceName": "AzureDataLakeStorage1",
						"type": "LinkedServiceReference"
					}
				}
			],
			"transformations": [
				{
					"name": "union2020and2021"
				},
				{
					"name": "aggregateColumns"
				},
				{
					"name": "filterByYear"
				},
				{
					"name": "addDerivedColumn"
				},
				{
					"name": "select2020schema"
				},
				{
					"name": "select2021schema"
				}
			],
			"scriptLines": [
				"parameters{",
				"     dataflow_param_fiscalyear2020 as integer (2020)",
				"}",
				"source(output(",
				"          FiscalYear as integer,",
				"          PayrollNumber as integer,",
				"          AgencyID as string,",
				"          AgencyName as string,",
				"          EmployeeID as string,",
				"          LastName as string,",
				"          FirstName as string,",
				"          AgencyStartDate as date,",
				"          WorkLocationBorough as string,",
				"          TitleCode as string,",
				"          TitleDescription as string,",
				"          LeaveStatusasofJune30 as string,",
				"          BaseSalary as double,",
				"          PayBasis as string,",
				"          RegularHours as double,",
				"          RegularGrossPaid as double,",
				"          OTHours as double,",
				"          TotalOTPaid as double,",
				"          TotalOtherPay as double",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table') ~> source2020",
				"source(output(",
				"          FiscalYear as integer,",
				"          PayrollNumber as integer,",
				"          AgencyCode as string,",
				"          AgencyName as string,",
				"          EmployeeID as string,",
				"          LastName as string,",
				"          FirstName as string,",
				"          AgencyStartDate as date,",
				"          WorkLocationBorough as string,",
				"          TitleCode as string,",
				"          TitleDescription as string,",
				"          LeaveStatusasofJune30 as string,",
				"          BaseSalary as double,",
				"          PayBasis as string,",
				"          RegularHours as double,",
				"          RegularGrossPaid as double,",
				"          OTHours as double,",
				"          TotalOTPaid as double,",
				"          TotalOtherPay as double",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table') ~> source2021",
				"select2020schema, select2021schema union(byName: true)~> union2020and2021",
				"addDerivedColumn aggregate(groupBy(FiscalYear,",
				"          AgencyName),",
				"     TotalPaid = sum(TotalPaid)) ~> aggregateColumns",
				"union2020and2021 filter(toInteger(FiscalYear) >= $dataflow_param_fiscalyear2020) ~> filterByYear",
				"filterByYear derive(TotalPaid = RegularGrossPaid + TotalOTPaid + TotalOtherPay) ~> addDerivedColumn",
				"source2020 select(mapColumn(",
				"          FiscalYear,",
				"          AgencyName,",
				"          RegularGrossPaid,",
				"          OTHours,",
				"          TotalOTPaid,",
				"          TotalOtherPay",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select2020schema",
				"source2021 select(mapColumn(",
				"          FiscalYear,",
				"          AgencyName,",
				"          RegularGrossPaid,",
				"          OTHours,",
				"          TotalOTPaid,",
				"          TotalOtherPay",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select2021schema",
				"aggregateColumns sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:false,",
				"     truncate:true,",
				"     format: 'table',",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     errorHandlingOption: 'stopOnFirstError') ~> sinktoSqlSummaryTable",
				"aggregateColumns sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     truncate: true,",
				"     umask: 0022,",
				"     preCommands: [],",
				"     postCommands: [],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     mapColumn(",
				"          FiscalYear,",
				"          AgencyName,",
				"          TotalPaid",
				"     )) ~> sinktoBlobStorage"
			]
		}
	}
}